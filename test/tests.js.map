{"version":3,"sources":["parser/unix-timestamp-parser-test.ts"],"names":[],"mappings":"AAAA,IAAO,cAAc,CAwCpB;AAxCD,WAAO,cAAc;IAAC,IAAA,MAAM,CAwC3B;IAxCqB,WAAA,MAAM;QACxB,QAAQ,CAAC,qCAAqC,EAAE;YAC5C,IAAI,MAA6C,CAAC;YAElD,UAAU,CAAC;gBACP,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;YACzD,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,+BAA+B,EAAE;gBAChC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,0BAA0B,EAAE;gBAC3B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,+BAA+B,EAAE;gBAChC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,4BAA4B,EAAE;gBAC7B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,kCAAkC,EAAE;gBACnC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,qBAAqB,EAAE;gBACtB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sCAAsC,EAAE;gBACvC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAY,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAClG,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,6BAA6B,EAAE;gBAC9B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5F,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,EAxCqB,MAAM,GAAN,qBAAM,KAAN,qBAAM,QAwC3B;AAAD,CAAC,EAxCM,cAAc,KAAd,cAAc,QAwCpB","file":"tests.js","sourcesContent":["module DateSliderTest.Parser {\r\n    describe(\"Unix timestamp (in seconds) parser.\", () => {\r\n        let parser: DateSlider.Parser.UnixTimestampParser;\r\n\r\n        beforeEach(() => {\r\n            parser = new DateSlider.Parser.UnixTimestampParser();\r\n        });\r\n\r\n        it(\"Invalid timestamp: input < 0.\", () => {\r\n            expect(parser.parse(-1)).toBe(null);\r\n        });\r\n\r\n        it(\"Invalid timestamp: null.\", () => {\r\n            expect(parser.parse(null)).toBe(null);\r\n        });\r\n\r\n        it(\"Invalid timestamp: undefined.\", () => {\r\n            expect(parser.parse(undefined)).toBe(null);\r\n        });\r\n\r\n        it(\"Invalid timestamp: string.\", () => {\r\n            expect(parser.parse(\"alma\")).toBe(null);\r\n        });\r\n\r\n        it(\"Invalid timestamp: empty string.\", () => {\r\n            expect(parser.parse(\"\")).toBe(null);\r\n        });\r\n\r\n        it(\"Valid timestamp: 0.\", () => {\r\n            expect(parser.parse(0)).toBe(new DateSlider.DateSliderModel(1970, 1, 1, 0, 0, 0));\r\n        });\r\n\r\n        it(\"Valid timestamp: number as a string.\", () => {\r\n            expect(parser.parse(\"100\" as any)).toBe(new DateSlider.DateSliderModel(1970, 1, 1, 1, 40, 0));\r\n        });\r\n\r\n        it(\"Valid timestamp: input > 0.\", () => {\r\n            expect(parser.parse(100)).toEqual(new DateSlider.DateSliderModel(1970, 1, 1, 1, 40, 0));\r\n        });\r\n    });\r\n}\r\n"]}