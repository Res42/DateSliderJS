{"version":3,"sources":["date-slider-angular.ts"],"names":[],"mappings":"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","file":"date-slider-angular.js","sourcesContent":["module DateSlider.Angular {\r\n    export interface IDateSliderDirectiveScope extends ng.IScope {\r\n        min?: any;\r\n        max?: any;\r\n        options?: DateSliderOptions;\r\n        instance?: DateSliderInstance;\r\n        ngModel: any;\r\n    }\r\n\r\n    export class DateSliderDirective implements ng.IDirective {\r\n        public restrict = \"A\";\r\n        public require = \"ngModel\";\r\n        public scope = {\r\n            \"dateSlider\": \"=?instance\",\r\n            \"max\": \"<?\",\r\n            \"min\": \"<?\",\r\n            \"ngModel\": \"=\",\r\n            \"options\": \"=?\",\r\n        };\r\n\r\n        public static factory(): DateSliderDirective {\r\n            return new DateSliderDirective();\r\n        }\r\n\r\n        public link = ($scope: IDateSliderDirectiveScope, $element: ng.IAugmentedJQuery, $attributes: ng.IAttributes, ngModelController: ng.INgModelController) => {\r\n            $scope.options = $scope.options || {};\r\n            $scope.options.validation = $scope.options.validation || {};\r\n            $scope.options.value = $scope.ngModel;\r\n\r\n            if (typeof $scope.min !== \"undefined\") {\r\n                $scope.options.validation.min = $scope.min;\r\n            }\r\n\r\n            if (typeof $scope.max !== \"undefined\") {\r\n                $scope.options.validation.max = $scope.max;\r\n            }\r\n\r\n            $scope.instance = DateSlider.create($element[0], $scope.options);\r\n\r\n            // Options changes\r\n            $scope.$watch(() => $scope.min, (newValue, oldValue) => {\r\n                if (newValue === oldValue) {\r\n                    return;\r\n                }\r\n\r\n                $scope.instance.updateOptions({ validation: { min: newValue } });\r\n            });\r\n            $scope.$watch(() => $scope.max, (newValue, oldValue) => {\r\n                if (newValue === oldValue) {\r\n                    return;\r\n                }\r\n\r\n                $scope.instance.updateOptions({ validation: { max: newValue } });\r\n            });\r\n            $scope.$watch(() => $scope.options, (newValue, oldValue) => {\r\n                if (newValue === oldValue) {\r\n                    return;\r\n                }\r\n\r\n                $scope.instance.updateOptions(newValue);\r\n            });\r\n\r\n            // Touched\r\n            // for (let slider of $scope.instance.sliders) {\r\n            //     slider.on(\"onSliderBoxGrabbed\", () => {\r\n            //         ngModelController.$setTouched();\r\n            //     });\r\n            // }\r\n\r\n            // Model changes\r\n            let fromEvent = false;\r\n            $scope.$watch(() => $scope.ngModel, (newValue, oldValue) => {\r\n                if (newValue === oldValue) {\r\n                    return;\r\n                }\r\n\r\n                // if the model changed from the event then the slider is already has the same value\r\n                // also if this isn't checked then it will cause the handle to jump sometimes\r\n                if (fromEvent) {\r\n                    return;\r\n                }\r\n\r\n                $scope.instance.setValue(newValue);\r\n            });\r\n\r\n            $scope.instance.on(\"onValueChanged\", (context: Context.ValueChangeContext): void => {\r\n                fromEvent = true;\r\n                ngModelController.$setViewValue(context.newValue);\r\n                ngModelController.$setValidity(\"date-slider\", context.isValid);\r\n                ngModelController.$setTouched();\r\n                setTimeout(() => { fromEvent = false; });\r\n            });\r\n        }\r\n    }\r\n\r\n    export class DateSliderOptionsProvider implements ng.IServiceProvider {\r\n        public defaultOptions = DateSlider.defaults;\r\n        public defaultSilderOptions = DateSlider.defaultSilderOptions;\r\n\r\n        public $get() {\r\n            return {\r\n                defaultOptions: () => { return this.defaultOptions; },\r\n                defaultSilderOptions: () => { return this.defaultSilderOptions; },\r\n            };\r\n        }\r\n    }\r\n\r\n    angular.module(\"dateSlider\", [])\r\n        .provider(\"dateSliderOptions\", [DateSliderOptionsProvider])\r\n        .directive(\"dateSlider\", [DateSliderDirective.factory]);\r\n}\r\n"]}